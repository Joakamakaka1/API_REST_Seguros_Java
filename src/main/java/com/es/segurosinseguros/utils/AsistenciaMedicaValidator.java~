package com.es.segurosinseguros.utils;

import com.es.segurosinseguros.dto.AsistenciaMedicaDTO;
import com.es.segurosinseguros.exception.ValidationException;

import java.text.DecimalFormat;

public class AsistenciaMedicaValidator {

    public static void validateAsistenciaMedica(AsistenciaMedicaDTO asistenciaMedicaDTO) throws ValidationException {
        if (asistenciaMedicaDTO == null) {
            throw new ValidationException("El DTO de asistencia médica no puede ser nulo");
        }

        if (asistenciaMedicaDTO.getBreveDescripcion() == null || asistenciaMedicaDTO.getBreveDescripcion().isEmpty()) {
            throw new ValidationException("La breve descripción de la asistencia no puede estar vacía");
        }

        if (asistenciaMedicaDTO.getLugar() == null || asistenciaMedicaDTO.getLugar().isEmpty()) {
            throw new ValidationException("El lugar de la asistencia no puede estar vacío");
        }

        if (asistenciaMedicaDTO.getExplicacion() == null || asistenciaMedicaDTO.getExplicacion().isEmpty()) {
            throw new ValidationException("La explicación detallada de la asistencia no puede estar vacía");
        }

        if (asistenciaMedicaDTO.getTipoAsistencia() == null) {
            throw new ValidationException("El tipo de asistencia no puede ser nulo");
        }

        if (asistenciaMedicaDTO.getFecha() == null) {
            throw new ValidationException("La fecha de la asistencia no puede ser nula");
        }

        if (asistenciaMedicaDTO.getHora() == null) {
            throw new ValidationException("La hora de la asistencia no puede ser nula");
        }

        if (asistenciaMedicaDTO.getImporte() <= 0) {
            throw new ValidationException("El importe asociado debe ser mayor que 0");
        }

        // Validar que el importe tenga exactamente 2 decimales
        if (!isValidDecimal(asistenciaMedicaDTO.getImporte())) {
            throw new ValidationException("El importe debe tener 2 decimales como máximo");
        }
    }

    private static boolean isValidDecimal(double importe) {
        DecimalFormat decimalFormat = new DecimalFormat("#.##");
        String formatted = decimalFormat.format(importe);
        return formatted.equals(String.format("%.2f", importe));
    }
}
